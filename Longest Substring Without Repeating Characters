/*
* Given a string, find the length of the longest substring without repeating characters. 
* For example, the longest substring without repeating letters for "abcabcbb" is "abc",
* which the length is 3. For "bbbbb" the longest substring is "b", with the length of 1.
*
* 
*
*/


public class Solution {
    public int lengthOfLongestSubstring(String s) {
        HashMap<Character , Integer> map = new HashMap<Character, Integer>();
        int left = -1, right = 0, answer = 1;
        if(s.length() == 0 || s == null)
            return 0;
        while(right != s.length()){
            Integer index = map.put(s.charAt(right), right);
            if(index != null)
            // which indicates that the map contains s(right), and index is where it is previously located in the string.  
            	left = Math.max(left, index);//Update the left index, s(left + 1: right) is the current longest substring.
            answer = Math.max(answer, right - left);
            right ++;
        }
        return answer;
    }
}
