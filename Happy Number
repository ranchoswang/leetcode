/* Write an algorithm to determine if a number is "happy".
* A happy number is a number defined by the following process: Starting with any positive integer, replace the 
* number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay),
* or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy 
* numbers.
*
* We use cycle detection to avoid cycle, and if the 'fast' argument ever reach to 1, return.
*
*/
public class Solution {
    public boolean isHappy(int n) {
        int slow, fast;
        slow = n;
        fast = n;
        do{
            slow = square(slow);
            fast = square(fast);
            fast = square(fast);
            if(fast == 1)
                return true;
        }while(slow != fast);
        return false;
    }
    
    public int square(int n){
        int sum = 0, digit;
        while(n != 0){
            digit = n % 10;
            sum += digit*digit;
            n = n /10;
        }
        return sum;
    }
}
