class MyQueue {

    Stack<Integer> stack1 = new Stack<Integer>();
    Stack<Integer> stack2 = new Stack<Integer>();

    public void push(int x) {
        stack1.push(x);
    }

    // Removes the element from in front of queue.
    public void pop() {
        if (stack2.size() == 0)
            transfer(stack1, stack2);
        stack2.pop();
    }

    private void transfer(Stack<Integer> stack1, Stack<Integer> stack2) {
        while (stack1.empty() != true) {
            stack2.push(stack1.pop());
        }
    }
    public int peek() {
        if (stack2.empty())
            transfer (stack1, stack2);
        return stack2.peek();
    }
    public boolean empty() {
        return (stack1.empty() && stack2.empty());
    }
}
